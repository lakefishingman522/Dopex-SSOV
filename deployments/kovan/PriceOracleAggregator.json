{
  "address": "0x26950c422eB2CbEd8BEC69A4e8B0f543e23334d8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "UpdateOracle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetToOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPriceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "contract IOracle",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "updateOracleForAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "viewPriceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9dbaf2ab05d9124515bbb17c31f12c05feac8dfa0e4117aa0001077eb86c59f1",
  "receipt": {
    "to": null,
    "from": "0x482C9f85644f1686C490D38291511657da767e61",
    "contractAddress": "0x26950c422eB2CbEd8BEC69A4e8B0f543e23334d8",
    "transactionIndex": 2,
    "gasUsed": "296722",
    "logsBloom": "0x
    "blockHash": "0xaff61bd72982f1faf218b94f22c18e723c48cfcb4ee1d1a3a5205a88453f6b6a",
    "transactionHash": "0x9dbaf2ab05d9124515bbb17c31f12c05feac8dfa0e4117aa0001077eb86c59f1",
    "logs": [],
    "blockNumber": 26744713,
    "cumulativeGasUsed": "605886",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x482C9f85644f1686C490D38291511657da767e61"
  ],
  "solcInputHash": "a12bb80eac07b84fe94bf540366fb887",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"UpdateOracle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetToOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"updateOracleForAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"viewPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceInUSD(address)\":{\"params\":{\"_token\":\"token to fetch price\"}},\"updateOracleForAsset(address,address)\":{\"params\":{\"_asset\":\"the oracle for the asset\",\"_oracle\":\"the oracle address\"}},\"viewPriceInUSD(address)\":{\"params\":{\"_token\":\"view price of token\"}}},\"stateVariables\":{\"admin\":{\"details\":\"admin allowed to update price oracle\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assetToOracle(address)\":{\"notice\":\"token to the oracle address\"},\"getPriceInUSD(address)\":{\"notice\":\"returns price of token in USD in 1e8 decimals\"},\"updateOracleForAsset(address,address)\":{\"notice\":\"adds oracle for an asset e.g. ETH\"},\"viewPriceInUSD(address)\":{\"notice\":\"returns price of token in USD\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/oracle/PriceOracleAggregator.sol\":\"PriceOracleAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/external/oracle/PriceOracleAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../interfaces/IPriceOracleAggregator.sol\\\";\\nimport \\\"../../interfaces/IOracle.sol\\\";\\n\\ncontract PriceOracleAggregator is IPriceOracleAggregator {\\n    /// @dev admin allowed to update price oracle\\n    address public immutable admin;\\n\\n    /// @notice token to the oracle address\\n    mapping(address => IOracle) public assetToOracle;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"ONLY_ADMIN\\\");\\n        _;\\n    }\\n\\n    constructor(address _admin) {\\n        require(_admin != address(0), \\\"INVALID_ADMIN\\\");\\n        admin = _admin;\\n    }\\n\\n    /// @notice adds oracle for an asset e.g. ETH\\n    /// @param _asset the oracle for the asset\\n    /// @param _oracle the oracle address\\n    function updateOracleForAsset(address _asset, IOracle _oracle)\\n        external\\n        override\\n        onlyAdmin\\n    {\\n        require(address(_oracle) != address(0), \\\"INVALID_ORACLE\\\");\\n        assetToOracle[_asset] = _oracle;\\n        emit UpdateOracle(_asset, _oracle);\\n    }\\n\\n    /// @notice returns price of token in USD in 1e8 decimals\\n    /// @param _token token to fetch price\\n    function getPriceInUSD(address _token) external override returns (uint256) {\\n        require(address(assetToOracle[_token]) != address(0), \\\"INVALID_ORACLE\\\");\\n        return assetToOracle[_token].getPriceInUSD();\\n    }\\n\\n    /// @notice returns price of token in USD\\n    /// @param _token view price of token\\n    function viewPriceInUSD(address _token)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        require(address(assetToOracle[_token]) != address(0), \\\"INVALID_ORACLE\\\");\\n        return assetToOracle[_token].viewPriceInUSD();\\n    }\\n}\\n\",\"keccak256\":\"0x1d0a47155bd7fa7e09db685f0fb2496d65e7d8cd002d9d56a2a6effea588bc45\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /// @notice Price update event\\n    /// @param asset the asset\\n    /// @param newPrice price of the asset\\n    event PriceUpdated(address asset, uint256 newPrice);\\n\\n    function getPriceInUSD() external returns (uint256);\\n\\n    function viewPriceInUSD() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2b9e9f128e81a1034a1a4d31defb908b9708760d1aa57180dc56923026d8549c\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracleAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOracle.sol\\\";\\n\\ninterface IPriceOracleAggregator {\\n    event UpdateOracle(address token, IOracle oracle);\\n\\n    function getPriceInUSD(address _token) external returns (uint256);\\n\\n    function updateOracleForAsset(address _asset, IOracle _oracle) external;\\n\\n    function viewPriceInUSD(address _token) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x041846ca7b73afa36efdb591011c150e30bd0ff9cd9505cac4fffae3ae4c240f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161053a38038061053a83398101604081905261002f9161008e565b6001600160a01b0381166100795760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22fa0a226a4a760991b604482015260640160405180910390fd5b60601b6001600160601b0319166080526100bc565b60006020828403121561009f578081fd5b81516001600160a01b03811681146100b5578182fd5b9392505050565b60805160601c61045a6100e06000396000818160f001526101ec015261045a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022661471461005c5780632e00d245146100825780635df52114146100c3578063eb9d14a9146100d8578063f851a440146100eb575b600080fd5b61006f61006a366004610371565b610112565b6040519081526020015b60405180910390f35b6100ab610090366004610371565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610079565b6100d66100d1366004610394565b6101e1565b005b61006f6100e6366004610371565b6102d5565b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038181166000908152602081905260408120549091166101545760405162461bcd60e51b815260040161014b906103e4565b60405180910390fd5b6001600160a01b038083166000908152602081815260408083205481516370d5301b60e11b8152915194169363e1aa603693600480840194938390030190829087803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db91906103cc565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102465760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa0a226a4a760b11b604482015260640161014b565b6001600160a01b03811661026c5760405162461bcd60e51b815260040161014b906103e4565b6001600160a01b038281166000818152602081815260409182902080546001600160a01b031916948616948517905581519283528201929092527fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d910160405180910390a15050565b6001600160a01b0381811660009081526020819052604081205490911661030e5760405162461bcd60e51b815260040161014b906103e4565b6001600160a01b038083166000908152602081815260409182902054825163f55fa17f60e01b8152925193169263f55fa17f926004808201939291829003018186803b15801561035d57600080fd5b505afa1580156101b7573d6000803e3d6000fd5b600060208284031215610382578081fd5b813561038d8161040c565b9392505050565b600080604083850312156103a6578081fd5b82356103b18161040c565b915060208301356103c18161040c565b809150509250929050565b6000602082840312156103dd578081fd5b5051919050565b6020808252600e908201526d494e56414c49445f4f5241434c4560901b604082015260600190565b6001600160a01b038116811461042157600080fd5b5056fea264697066735822122040d749168f7898bd9b3f531aa1bc49cff1ffb706befe94691d543d88edc58af164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063022661471461005c5780632e00d245146100825780635df52114146100c3578063eb9d14a9146100d8578063f851a440146100eb575b600080fd5b61006f61006a366004610371565b610112565b6040519081526020015b60405180910390f35b6100ab610090366004610371565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610079565b6100d66100d1366004610394565b6101e1565b005b61006f6100e6366004610371565b6102d5565b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038181166000908152602081905260408120549091166101545760405162461bcd60e51b815260040161014b906103e4565b60405180910390fd5b6001600160a01b038083166000908152602081815260408083205481516370d5301b60e11b8152915194169363e1aa603693600480840194938390030190829087803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db91906103cc565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102465760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa0a226a4a760b11b604482015260640161014b565b6001600160a01b03811661026c5760405162461bcd60e51b815260040161014b906103e4565b6001600160a01b038281166000818152602081815260409182902080546001600160a01b031916948616948517905581519283528201929092527fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d910160405180910390a15050565b6001600160a01b0381811660009081526020819052604081205490911661030e5760405162461bcd60e51b815260040161014b906103e4565b6001600160a01b038083166000908152602081815260409182902054825163f55fa17f60e01b8152925193169263f55fa17f926004808201939291829003018186803b15801561035d57600080fd5b505afa1580156101b7573d6000803e3d6000fd5b600060208284031215610382578081fd5b813561038d8161040c565b9392505050565b600080604083850312156103a6578081fd5b82356103b18161040c565b915060208301356103c18161040c565b809150509250929050565b6000602082840312156103dd578081fd5b5051919050565b6020808252600e908201526d494e56414c49445f4f5241434c4560901b604082015260600190565b6001600160a01b038116811461042157600080fd5b5056fea264697066735822122040d749168f7898bd9b3f531aa1bc49cff1ffb706befe94691d543d88edc58af164736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPriceInUSD(address)": {
        "params": {
          "_token": "token to fetch price"
        }
      },
      "updateOracleForAsset(address,address)": {
        "params": {
          "_asset": "the oracle for the asset",
          "_oracle": "the oracle address"
        }
      },
      "viewPriceInUSD(address)": {
        "params": {
          "_token": "view price of token"
        }
      }
    },
    "stateVariables": {
      "admin": {
        "details": "admin allowed to update price oracle"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assetToOracle(address)": {
        "notice": "token to the oracle address"
      },
      "getPriceInUSD(address)": {
        "notice": "returns price of token in USD in 1e8 decimals"
      },
      "updateOracleForAsset(address,address)": {
        "notice": "adds oracle for an asset e.g. ETH"
      },
      "viewPriceInUSD(address)": {
        "notice": "returns price of token in USD"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7358,
        "contract": "contracts/external/oracle/PriceOracleAggregator.sol:PriceOracleAggregator",
        "label": "assetToOracle",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(IOracle)8255)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)8255": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IOracle)8255)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IOracle)",
        "numberOfBytes": "32",
        "value": "t_contract(IOracle)8255"
      }
    }
  }
}